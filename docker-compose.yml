version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ultimate_ai_ide
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/sql/init.sql:/docker-entrypoint-initdb.d/init.sql

  # Redis Cache
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Web Application (Next.js)
  web:
    build:
      context: .
      dockerfile: ./infrastructure/docker/Dockerfile.web
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/ultimate_ai_ide
      - REDIS_URL=redis://redis:6379
    volumes:
      - .:/app
      - /app/node_modules
      - /app/apps/web/.next
    depends_on:
      - postgres
      - redis
    command: npm run dev

  # FastAPI Services
  api:
    build:
      context: .
      dockerfile: ./infrastructure/docker/Dockerfile.api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/ultimate_ai_ide
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./services:/app/services
    depends_on:
      - postgres
      - redis
    command: uvicorn services.api.main:app --host 0.0.0.0 --port 8000 --reload

  # MCP Server Hub
  mcp-hub:
    build:
      context: .
      dockerfile: ./infrastructure/docker/Dockerfile.mcp-hub
    ports:
      - "9000:9000"
    environment:
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./packages/mcp-hub:/app/mcp-hub
      - mcp_logs:/app/logs
    depends_on:
      - redis
    restart: unless-stopped

  # Prometheus (Metrics)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'

  # Grafana (Dashboards)
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infrastructure/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./infrastructure/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:
  mcp_logs:

networks:
  default:
    name: ultimate-ai-ide-network